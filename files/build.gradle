import com.vanniktech.maven.publish.AndroidSingleVariantLibrary

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.20.0'
    }
}

plugins {
    id 'com.vanniktech.maven.publish.base'
    id 'maven-publish'
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.parcelize'
}

publishing {
    repositories {
        maven {
            allowInsecureProtocol = true
            url = uri("${rootProject.projectDir}/maven")
        }
    }
}

mavenPublishing {
    // available options:
    //   - JavaLibrary
    //   - GradlePlugin
    //   - AndroidLibrary (deprecated)
    //   - AndroidSingleVariantLibrary (requires AGP 7.1.1)
    //   - AndroidMultiVariantLibrary (requires AGP 7.1.1)
    //   - KotlinJvm
    //   - KotlinJs
    //   - KotlinMultiplatform
    // the first parameter configures the javadoc jar, available options:
    //   - None
    //   - Empty
    //   - Javadoc
    //   - Dokka("dokkaHtml") - the parameter is the name of the Dokka task
    // second one is for whether to publish sources, optional, defaults to true (not supported for KotlinMultiplatform(
    // AndroidLibrary has a third parameter for which variant to publish, defaults to "release"
    // configure(new JavaLibrary(new JavadocJar.Javadoc(), true))

    // signAllPublications()
    // pomFromGradleProperties()
    // configure(new AndroidMultiVariantLibrary())

    group = 'io.github.nullptrx'
    archivesBaseName = 'files'
    version = '1.0.0'
    configure(new AndroidSingleVariantLibrary())
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        // def pkgId = "io.github.nullptrx.files.example"
        def pkgId = "com.tera.file.manager"
        buildConfigField 'String', 'PKG_ID', "\"$pkgId\""
        buildConfigField 'String', 'FILE_PROVIDIER_AUTHORITY', "\"${pkgId}.files.file_provider\""
        resValue 'string', 'app_provider_authority', pkgId + '.files.app_provider'
        resValue 'string', 'file_provider_authority', pkgId + '.files.file_provider'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += [
                '-opt-in=kotlin.RequiresOptIn',
        ]
    }

    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }

    // sourceSets {
    //     main {
    //         java {
    //             srcDirs += ['src/main/libsu/core/java', 'src/main/libsu/service/java']
    //         }
    //         assets {
    //             srcDirs += ['src/main/libsu/service/assets']
    //         }
    //         aidl {
    //             srcDirs += ['src/main/libsu/service/aidl']
    //         }
    //     }
    // }
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // api project(":retrofile")
    // api project(":selinux")
    api 'io.github.nullptrx:retrofile:1.0.0'
    api 'io.github.nullptrx:selinux:1.0.0'

    api 'androidx.core:core-ktx:1.8.0'
    api 'androidx.appcompat:appcompat:1.4.2'
    api 'androidx.preference:preference-ktx:1.2.0'
    api 'androidx.exifinterface:exifinterface:1.3.3'
    def androidx_lifecycle_version = '2.4.1'
    api "androidx.lifecycle:lifecycle-common-java8:$androidx_lifecycle_version"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$androidx_lifecycle_version"
    api "androidx.lifecycle:lifecycle-process:$androidx_lifecycle_version"
    api "androidx.lifecycle:lifecycle-runtime-ktx:$androidx_lifecycle_version"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidx_lifecycle_version"

    // root
    def libsuVersion = '5.0.2'
    // The core module that provides APIs to a shell
    // api "com.github.topjohnwu.libsu:core:$libsuVersion"
    // Optional: APIs for creating root services. Depends on ":core"
    api "com.github.topjohnwu.libsu:service:$libsuVersion"
    // Optional: Provides remote file system support
    // api "com.github.topjohnwu.libsu:nio:$libsuVersion"
    api 'dev.rikka.shizuku:api:12.0.0'

    // archive
    api 'com.github.junrar:junrar:7.4.1'
    // Also a dependency of jCIFS-NG and Junrar.
    api 'org.slf4j:slf4j-android:1.7.36'
    // Commons Compress 1.21 requires Android 8.0.
    // See also https://issues.apache.org/jira/browse/COMPRESS-611
    // Run `git revert fb1628e` if we ever created a fork that supports Android 5.0, or we raised
    // minimum SDK version to Android 8.0.
    //noinspection GradleDependency
    api 'org.apache.commons:commons-compress:1.20'
    // Optional dependency of Commons Compress for 7Z LZMA.
    api 'org.tukaani:xz:1.9'

    // server
    api 'commons-net:commons-net:3.8.0'


    api('com.rapid7.client:dcerpc:0.12.0') {
        // org.bouncycastle:bcprov-jdk15on uses bytecode version unsupported by Jetifier, so use
        // org.bouncycastle:bcprov-jdk15to18 instead.
        exclude group: 'org.bouncycastle', module: 'bcprov-jdk15on'
    }
    api 'org.bouncycastle:bcprov-jdk15to18:1.70'
    // SMBJ-RPC depends on com.google.guava:guava:18.0, which conflicts with
    // com.google.guava:listenablefuture:1.0 pulled in by AndroidX Core
    api 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    api 'eu.agno3.jcifs:jcifs-ng:2.1.6'
    api 'net.sourceforge.streamsupport:android-retrostreams:1.7.4'

    api 'org.apache.ftpserver:ftpserver-core:1.2.0'
    // This is a dependency of org.apache.ftpserver:ftpserver-core but org.apache.mina:mina-core
    // 2.1.3+ became incompatible before API 24 due to dependency on StandardSocketOptions
    // (DIRMINA-1123) and NetworkChannel.supportedOptions() (DIRMINA-1130).
    api('org.apache.mina:mina-core') {
        version {
            strictly '2.1.3'
        }
    }
    // Also a dependency of jCIFS-NG and Junrar.
    api 'org.slf4j:slf4j-android:1.7.36'
}

